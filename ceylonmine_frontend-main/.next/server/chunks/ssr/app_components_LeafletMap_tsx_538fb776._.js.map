{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///Users/senujidesilva/Desktop/ceylonmine_frontend/app/components/LeafletMap.tsx"],"sourcesContent":["// \"use client\";\n\n// import { useEffect, useRef } from \"react\";\n// import L from \"leaflet\";\n// import \"leaflet/dist/leaflet.css\";\n// import \"leaflet-gesture-handling/dist/leaflet-gesture-handling.css\";\n// import \"leaflet-gesture-handling\";\n// import \"leaflet-control-geocoder\";\n// import \"leaflet-search\";\n// import \"leaflet-search/dist/leaflet-search.min.css\";\n// import \"leaflet.fullscreen\";\n// import \"leaflet.fullscreen/Control.FullScreen.css\";\n// import \"leaflet.markercluster\";\n// import \"leaflet.markercluster/dist/MarkerCluster.css\";\n// import \"leaflet.markercluster/dist/MarkerCluster.Default.css\";\n// import \"./LeafletMap.css\";\n\n// interface Location {\n//   name: string;\n//   description: string;\n//   latitude: number;\n//   longitude: number;\n//   longDes?: string;\n//   image?: string;\n// }\n\n// interface LeafletMapProps {\n//   isDarkMode: boolean;\n// }\n\n// const LeafletMap: React.FC<LeafletMapProps> = ({ isDarkMode }) => {\n//   const mapRef = useRef<HTMLDivElement>(null);\n\n//   useEffect(() => {\n//     let map: L.Map | null = null;\n//     let markersLayer: L.MarkerClusterGroup | null = null;\n\n//     if (typeof window !== \"undefined\") {\n//       delete L.Icon.Default.prototype._getIconUrl;\n//       L.Icon.Default.mergeOptions({\n//         iconRetinaUrl: \"/images/marker-icon-2x.png\",\n//         iconUrl: \"/images/marker-icon.png\",\n//         shadowUrl: \"/images/marker-shadow.png\",\n//       });\n//     }\n\n//     const initializeMap = () => {\n//       if (!mapRef.current || map !== null) return;\n\n//       map = L.map(mapRef.current, {\n//         zoomControl: false,\n//         scrollWheelZoom: false,\n//         gestureHandling: true,\n//         zoomAnimation: true,\n//         fadeAnimation: true,\n//         markerZoomAnimation: true,\n//         minZoom: 7,\n//         maxZoom: 18,\n//       });\n\n//       map.setView([7.8731, 80.7718], 7);\n\n//       const streets = L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n//         attribution: \"&copy; OpenStreetMap contributors\",\n//       });\n\n//       const satellite = L.tileLayer(\n//         \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",\n//         {\n//           attribution: \"&copy; Esri & contributors\",\n//         }\n//       ).addTo(map);\n\n//       const terrain = L.tileLayer(\"https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png\", {\n//         attribution: \"&copy; OpenTopoMap contributors\",\n//       });\n\n//       const darkMode = L.tileLayer(\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png\", {\n//         attribution: \"&copy; OpenStreetMap & CARTO contributors\",\n//       });\n\n//       L.control.layers(\n//         { Streets: streets, Satellite: satellite, Terrain: terrain, \"Dark Mode\": darkMode },\n//         {}\n//       ).addTo(map);\n\n//       const bounds = L.latLngBounds(L.latLng(5.9167, 79.5167), L.latLng(9.8333, 81.8833));\n//       map.setMaxBounds(bounds);\n\n//       map.on(\"drag\", () => {\n//         map.panInsideBounds(bounds, { animate: true, duration: 0.5 });\n//       });\n\n//       L.control.zoom({ position: \"topright\" }).addTo(map);\n//       L.control.fullscreen({ position: \"topright\" }).addTo(map);\n\n//       markersLayer = L.markerClusterGroup({\n//         spiderfyOnMaxZoom: true,\n//         showCoverageOnHover: false,\n//         zoomToBoundsOnClick: true,\n//       }).addTo(map);\n\n//       const createCustomMarker = (location: Location) => {\n//         const marker = L.marker([location.latitude, location.longitude], {\n//           icon: L.divIcon({\n//             className: \"custom-marker\",\n//             html: `<div class='marker-3d'>üìç</div>`,\n//             iconSize: [40, 40],\n//             iconAnchor: [20, 40],\n//           }),\n//           title: location.name,\n//         });\n\n//         const createPopupContent = (isExpanded = false) => `\n//           <div class=\"custom-popup\">\n//             <h3>${location.name}</h3>\n//             <div class=\"popup-description\">${location.description}</div>\n//             <div class=\"additional-content\" style=\"display: ${isExpanded ? \"block\" : \"none\"}\">\n//               <p>${location.longDes || \"Additional details not available.\"}</p>\n//               ${location.image ? `<img src=\"/images/${location.image}\" alt=\"${location.name}\" class=\"popup-image\" />` : \"\"}\n//             </div>\n//             <div class=\"popup-buttons\">\n//               <button class=\"see-more-btn\">${isExpanded ? \"See Less\" : \"See More\"}</button>\n//               <button class=\"google-maps-btn\">Open in Maps</button>\n//             </div>\n//           </div>\n//         `;\n\n//         marker.bindPopup(createPopupContent(false));\n\n//         marker.on(\"popupopen\", () => {\n//           const popup = marker.getPopup();\n//           const popupElement = popup.getElement();\n//           if (!popupElement) return;\n\n//           const seeMoreBtn = popupElement.querySelector(\".see-more-btn\");\n//           const googleMapsBtn = popupElement.querySelector(\".google-maps-btn\");\n\n//           if (seeMoreBtn) {\n//             seeMoreBtn.onclick = () => {\n//               const isExpanded = seeMoreBtn.textContent === \"See Less\";\n//               marker.setPopupContent(createPopupContent(!isExpanded));\n//             };\n//           }\n\n//           if (googleMapsBtn) {\n//             googleMapsBtn.onclick = () => {\n//               window.open(`https://www.google.com/maps?q=${location.latitude},${location.longitude}`, \"_blank\");\n//             };\n//           }\n//         });\n\n//         return marker;\n//       };\n\n//       const fetchLocations = () => {\n//         fetch(\"http://127.0.0.1:5000/map/get\")\n//           .then((response) => {\n//             if (!response.ok) throw new Error(\"Network response was not ok\");\n//             return response.json();\n//           })\n//           .then((data: Location[]) => {\n//             if (!map || !markersLayer) return;\n\n//             data.forEach((location) => {\n//               const marker = createCustomMarker(location);\n//               markersLayer.addLayer(marker);\n//             });\n\n//             if (map) {\n//               const searchControl = new L.Control.Search({\n//                 layer: markersLayer,\n//                 propertyName: \"title\",\n//                 initial: false,\n//                 zoom: 12,\n//                 marker: false,\n//                 moveToLocation: (latlng: L.LatLng, title: string, map: L.Map) => {\n//                   map.setView(latlng, 14);\n//                   const targetMarker = markersLayer.getLayers().find((layer: any) => layer.options.title === title);\n//                   if (targetMarker) targetMarker.openPopup();\n//                 },\n//                 textPlaceholder: \"üîç Search locations...\",\n//                 position: \"topleft\",\n//               }).addTo(map);\n\n//               searchControl.on(\"search:locationfound\", (e: any) => {\n//                 if (!e.layer) return;\n\n//                 e.layer.setIcon(\n//                   L.divIcon({\n//                     className: \"custom-marker highlighted\",\n//                     html: `<div class='marker-3d active'>üìç</div>`,\n//                     iconSize: [50, 50],\n//                     iconAnchor: [25, 50],\n//                   })\n//                 );\n\n//                 setTimeout(() => {\n//                   if (e.layer) {\n//                     e.layer.setIcon(\n//                       L.divIcon({\n//                         className: \"custom-marker\",\n//                         html: `<div class='marker-3d'>üìç</div>`,\n//                         iconSize: [40, 40],\n//                         iconAnchor: [20, 40],\n//                       })\n//                     );\n//                   }\n//                 }, 2000);\n//               });\n//             }\n//           })\n//           .catch((error) => {\n//             console.error(\"Error fetching locations:\", error);\n//             if (mapRef.current) {\n//               const errorMessage = document.createElement(\"div\");\n//               errorMessage.innerHTML = `<span class=\"error-message\">‚ö†Ô∏è Error loading locations: ${error.message}</span>`;\n//               mapRef.current.appendChild(errorMessage);\n//             }\n//           });\n//       };\n\n//       if (map) {\n//         fetchLocations();\n//       }\n\n//       const handleResize = () => {\n//         if (map) {\n//           map.invalidateSize();\n//         }\n//       };\n\n//       window.addEventListener(\"resize\", handleResize);\n\n//       setTimeout(() => {\n//         if (map) {\n//           map.invalidateSize();\n//         }\n//       }, 300);\n\n//       return () => {\n//         window.removeEventListener(\"resize\", handleResize);\n//         if (map) {\n//           map.remove();\n//           map = null;\n//         }\n//         markersLayer = null;\n//       };\n//     };\n\n//     const timeout = setTimeout(initializeMap, 100);\n\n//     return () => {\n//       clearTimeout(timeout);\n//     };\n//   }, [isDarkMode]);\n\n//   return (\n//     <div\n//       id=\"map\"\n//       ref={mapRef}\n//       style={{\n//         height: \"100%\",\n//         width: \"100%\",\n//         borderRadius: \"15px\",\n//         boxShadow: isDarkMode ? \"0 10px 30px rgba(255,255,255,0.2)\" : \"0 10px 30px rgba(0,0,0,0.2)\",\n//         position: \"relative\",\n//       }}\n//     />\n//   );\n// };\n\n// export default LeafletMap;\n"],"names":[],"mappings":"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","debugId":null}}]
}